type Account @entity {
  # account's address
  id: ID!
  multiaddr: Bytes
  # the channels which the Account is part of"
  channels: [Channel]!
  # has the Account set a multiaddr?"
  hasAnnounced: Boolean!
}

enum ChannelStatus {
  CLOSED
  OPEN
  WAITING_FOR_COMMITMENT
  PENDING_TO_CLOSE
}

type Channel @entity {
  # the channel id, this should be computed like:
  # https://github.com/hoprnet/hoprnet/blob/26abb110bc5d18b84786066676b379bbc00a331c/packages/utils/src/types/channelEntry.ts#L14
  id: ID!
  source: Account!
  destination: Account!
  balance: BigInt!
  commitment: Bytes!
  ticketEpoch: BigInt!
  ticketIndex: BigInt!
  status: ChannelStatus!
  # timestamp when it was opened
  openedAt: BigInt
  # timestamp when it was closed
  closedAt: BigInt
}
